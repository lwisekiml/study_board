spring:
  profiles:
    active: local
    group:
      local:
        - common
      prod:
        - common
---
spring:
  config:
    activate:
      on-profile: common

---
spring:
  config:
    activate:
      on-profile: local
            # .env 값 import
    import: optional:file:.env[.properties]
  datasource:
#    url: jdbc:mysql://127.0.0.1:3306/studydb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    # docker
    url: jdbc:mysql://127.0.0.1:3307/study-board?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: ${MY_MYSQL_PW}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-authentication-method: client_secret_post
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  servlet:
    multipart:
      max-file-size: 1MB # 파일 하나의 최대 사이즈
      max-request-size: 10MB # 전체 사이즈

  messages:
    basename: messages,errors
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL}
    password: ${GMAIL_APP_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true

  data:
    redis:
      host: 127.0.0.1
      port: 6379

kakao:
  rest_api:
    client_id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}



server:
  servlet:
    session:
      tracking-modes=cookie: cookie

logging:
  level:
    org.apache.coyote.http11: trace
    org.hibernate.SQL: debug

file:
  dir: /G:/

---
spring:
# .env 값 import
  config:
    activate:
      on-profile: dev
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://localhost:3306/studydb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: ${AWS_MYSQL_PW}
    driver-class-name: com.mysql.cj.jdbc.Driver
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-authentication-method: client_secret_post
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://${AWS_IP}:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  servlet:
    multipart:
      max-file-size: 1MB # 파일 하나의 최대 사이즈
      max-request-size: 10MB # 전체 사이즈

  messages:
    basename: messages,errors

kakao:
  rest_api:
    client_id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}

server:
  servlet:
    session:
      tracking-modes=cookie: cookie

logging:
  level:
    org.apache.coyote.http11: trace
    org.hibernate.SQL: debug

file:
  dir: /home/ec2-user/file # 파일 저장 위치(업로드시)

